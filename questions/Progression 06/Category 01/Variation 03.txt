Write a function that takes an int argument, x,  and returns a string containing all the 
triangular numbers that are less than x, starting from 1. Each number should be followed by a 
space.

Note: A triangular number counts the objects that can form an equilateral triangle, as in the 
diagram below. 

                                                                       .
                                                         .            . .
                                             .          . .          . . . 
                                    .       . .        . . .        . . . . 
                             .     . .     . . .      . . . .      . . . . .
                        .   . .   . . .   . . . .    . . . . .    . . . . . .
            
n:                      1    2      3        4           5             6
triangular number:      1    3      6        10          15            21

The nth triangular number is the previous triangular number + n

The function should use a while loop.

The function should pass the doctests shown below:

def triangle_nums(x):
    '''
    >>> triangle_nums(50)
    '1 3 6 10 15 21 28 36 45 '
    >>> triangle_nums(100)
    '1 3 6 10 15 21 28 36 45 55 66 78 91 '
    '''

if __name__ == "__main__":
    import doctest
    doctest.testmod(verbose=True)
