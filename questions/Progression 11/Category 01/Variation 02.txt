Requires File: 147.zip

Grouping dictionary

This question asks you to create a dictionary from a file where the keys are single strings and the values are lists of strings 
associated with the key.

Write a function called create_dict that takes a file name as an argument. The function should read each line in 
the file and split it on the comma. The second string should be a key, the first string should be appended to the list associated
with that key. Be sure leading and trailing whitespace is removed from the strings before they are entered in the dictionary.
Hint: dir(str)

In the doctests, using the file provided, the function is creating a dictionary where each key is a region in Africa and the 
corresponding value is a list of countries or autonomous cities in that region.

You may be certain that there is only one comma per line of text in the file and the file contains no duplicates. 

The function should pass the doctests shown below: 

def create_dict(file_name):
    '''
    >>> african_countries_by_region = create_dict("african_countries.txt")
    >>> sorted(african_countries_by_region['Northern Africa'])
    ['Algeria', 'Canary Islands', 'Ceuta', 'Egypt', 'Libya', 'Madeira', 'Melilla', 'Morocco', 'Sudan', 'Tunisia', 'Western Sahara']
    >>> sorted(african_countries_by_region['Southern Africa'])[-2]
    'Namibia'
    >>> sorted(african_countries_by_region['Eastern Africa'])[2]
    'Djibouti'
    '''

if __name__== "__main__":
    import doctest
    doctest.testmod(verbose=True)
